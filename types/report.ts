/**
 * @file Types of report generated by the grader. It's based off the `ReportT` data class
 * in the `grader` repo.
 */

/**
 * Report generated by the grader. This should closely follow the `ReportT` data class in the "grader" repo.
 */
export type GraderReport = {
  configError?: ConfigError;
  contextError?: ContextError;
  pipelineError?: PipelineError;
  stageReports?: StageReports;
  scoreReports?: ScoreReports;
};

export type ConfigError = {
  configFormatError?: {
    errorField: string;
    knownValues: string[];
    fieldPath: string;
    throwableSummary?: ThrowableSummary;
  };
  langFormatError?: {
    actual: string;
    message: string;
  };
  langUnsupportedError?: {
    lang: string;
    version?: string;
    compiler?: string;
  };
  fieldUnsupportedError?: {
    field: string;
  }[];
  fieldsUndeclaredError?: {
    stageUsed: string;
    optionUsed?: string;
    missingAnyOfFields?: string[];
    missingAllOfFields?: string[];
    message?: string;
  }[];
  fieldsIncorrectlyUsedError?: {
    stageUsed: string;
    optionUsed?: string;
    problematicFields?: string[];
    message?: string;
  }[];
  heredocDelimitingError?: {
    fieldPath: string;
    stdin: string;
    message: string;
  }[];
};

export type ContextError = {
  fileNotFoundError?: {
    envHostRoot: string;
    requested: string;
  }[];
};

export type PipelineError = {
  nonFatalError?: {
    className: string;
    message?: string;
    context?: string[];
    cause?: ThrowableSummary[];
  }[];
  fatalError?: {
    type: string;
    message?: string;
    stacktrace: string[];
  };
};

export type ScoreReports = {
  reports: ScoreReportUnit[];
  accScore: number;
  accTotal: number;
};

export type StageReports = {
  // TODO: Typing on stage reports
  reports: any[];
};

export type ScoreReportUnit = {
  hash: string;
  score: number;
  total: number;
  displayName: string;
  stageReportPath: string;
  stageMangledName: string;
  testCaseReportPath: string;
  testCaseMangledName: string;
};

export type ThrowableSummary = {
  type: string;
  message?: string;
  context?: string[];
  stacktrace: string[];
};
